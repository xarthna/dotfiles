os='#(uname -s)'

set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# set -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "screen-256color"

# Change prefix
unbind C-b
set-option -g prefix 'C-\'
bind 'C-\' send-prefix

# Reload
bind r source-file ~/.tmux.conf \; display " Reloaded"

bind i split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
unbind '"'
unbind '%'

set -g status-interval 1

# Pane resizing
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' |grep fzf"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim || $is_fzf" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim || $is_fzf" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Start searching
bind-key / copy-mode \; send-key ?

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

# swap current pane
bind > swap-pane -D
bind < swap-pane -U

set -g automatic-rename on
set -g renumber-windows on 
bind-key n new-window -c "#{pane_current_path}"
bind-key N new-window

# Double tap to get to last window
bind-key 'C-\' last-window

# Activity
set -g monitor-activity on
set -g visual-activity off

set -g base-index 1
set -g pane-base-index 1
set -sg focus-events on

set -g mouse on

bind-key f choose-tree

# Set no delay
set -sg escape-time 0
set -sg repeat-time 600


# slightly longer status messages display time
set-option -g display-time 2000

# slightly longer pane indicators display time
set -g display-panes-time 800

# Longer history
set -g history-limit 30000

# Copy mode settings
set -g mode-keys vi
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
if-shell -b '[ "$os" == "Darwin" ]' \
  "bind -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel"

if-shell -b '[ "$os" == "Linux" ]' \
  "bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'" \
  "bind -T copy-mode-vi 'MouseDragEnd1Pane' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

bind -T copy-mode-vi 'c' send-keys -X cancel
bind -T copy-mode-vi 'H' send-keys -X start-of-line
bind -T copy-mode-vi 'L' send-keys -X end-of-line

######################
### DESIGN CHANGES ###
######################

# messaging
set -g message-style bg='#44475a',fg='#79b8ff'

# Shhhh
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# set inactive/active window styles
set -g window-style 'fg=colour240,bg=#151515'
set -g window-active-style 'fg=colour250,bg=#1b1918'

# set the pane border colors
set -g pane-active-border-style 'fg=#1b1918,bg=#1b1918'
set -g pane-border-style 'fg=#1b1918, bg=#1b1918'

# The statusbar
set -g window-status-style 'fg=#CDCDCD,bg=#1b1918'
set -g window-status-current-style 'fg=#79b8ff,bg=#1b1918'
set -g window-status-format '#I•#{window_name}#F'
set -g window-status-current-format '#[italics]#[bold]#I•#W#[none]'
set -g window-status-last-style 'fg=#bcbcbc,italics'

set -g status-style 'fg=#CDCDCD,bg=#1b1918'
set -g status-position top 
set -g status-right "#{?client_prefix, #[fg=#79b8ff]#[bg=#1b18918] PREFIX #[bg=#1b1918],} #[fg=#79b8ff] #[italics]#{b:pane_current_path}#[none] #(~/.tmux/plugins/battery.sh) #[fg=#d6d6d6,bg=#1b1918] #[italics]%a %b %d %I:%M%p "
set -g status-right-length 90
set -g status-left-length 20
set -g status-left ''
# set-hook -g window-renamed 'run-shell "~/.tmux/plugins/current_program.sh"'
# set -g window-status-current-format '#[italics]#[bold]#I•#(~/.tmux/plugins/current_program.sh)#[none]'
# set-option -g automatic-rename-format '#(sleep 2; if [ "#W" == "bash" ]; then echo "foo"; else echo "bar"; fi)'

set -sg set-clipboard on
